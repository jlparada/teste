import barcode
from barcode.writer import ImageWriter
import cv2
from pyzbar.pyzbar import decode
import numpy as np
from PIL import Image
import streamlit as st

# Escolher o tipo de c√≥digo de barras (EAN13, Code128, etc.)
codigo = barcode.get_barcode_class('code128')

# Gerar o c√≥digo de barras
codigo_barras = codigo('PS27', writer=ImageWriter())

# Salvar como imagem
codigo_barras.save("codigo_barras")


# Fun√ß√£o de escaneamento do c√≥digo de barras
def escanear_codigo():
    cap = cv2.VideoCapture(0)
    st.write("üì∏ **Aponte o c√≥digo de barras para a c√¢mera...**")

    # Criar um espa√ßo para exibir o preview
    placeholder = st.empty()

    codigo_detectado = None

    # Loop para capturar imagens da c√¢mera
    while True:
        ret, frame = cap.read()
        if not ret:
            st.error("Erro ao acessar a c√¢mera!")
            break

        # Decodificar c√≥digos de barras
        for barcode in decode(frame):
            codigo_detectado = barcode.data.decode("utf-8")
            break  # Para a leitura assim que encontrar um c√≥digo

        # Mostrar o preview da c√¢mera
        frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)  # Converter para RGB
        placeholder.image(frame, channels="RGB", use_container_width=True)

        # Se o c√≥digo foi detectado, interrompe o loop
        if codigo_detectado:
            break

    cap.release()
    cv2.destroyAllWindows()

    # Apagar o preview e exibir apenas o c√≥digo detectado
    placeholder.empty()

    if codigo_detectado:
        st.success(f"‚úÖ **C√≥digo Detectado:** `{codigo_detectado}`")
    else:
        st.warning("Escaneamento cancelado ou sem c√≥digo detectado!")

# Interface do Streamlit
st.title("üì∑ Leitor de C√≥digo de Barras com Streamlit")

# Exibe o bot√£o "Escanear C√≥digo"
escanear_button = st.button("üìå Escanear C√≥digo")

# Mostrar o bot√£o "Cancelar" apenas depois de o bot√£o "Escanear C√≥digo" ser pressionado
if escanear_button:
    cancel_button = st.button("‚ùå Cancelar")

    # Inicia o processo de escaneamento
    escanear_codigo()

    # Se o bot√£o Cancelar for pressionado, exibe a mensagem de cancelamento
    if cancel_button:
        st.warning("Escaneamento cancelado!")  # Informa que o escaneamento foi cancelado








